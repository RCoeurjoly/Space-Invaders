; SMT-LIBv2 description generated by Yosys 0.8+143 (git sha1 c4b61f2d, clang 6.0.0-1ubuntu2 -fPIC -Os)
; yosys-smt2-module ship
(declare-sort |ship_s| 0)
(declare-fun |ship_is| (|ship_s|) Bool)
; yosys-smt2-output ship_x 5
; yosys-smt2-wire ship_x 5
(declare-fun |ship#0| (|ship_s|) (_ BitVec 1)) ; \left_debounced
(define-fun |ship#1| ((state |ship_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b0 #b1)) ; $60\ship_x[4:0] [0]
(declare-fun |ship#2| (|ship_s|) (_ BitVec 1)) ; \reset
(define-fun |ship#3| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b1001 (|ship#1| state)) #b00101)) ; $59\ship_x[4:0]
(declare-fun |ship#4| (|ship_s|) (_ BitVec 1)) ; \right_debounced
(define-fun |ship#5| ((state |ship_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b1 #b0)) ; $10\ship_x[4:0]
(define-fun |ship#6| ((state |ship_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b01 (concat #b1 (|ship#5| state)))) ; $33\ship_x[4:0] [1:0]
(define-fun |ship#7| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b100 (|ship#6| state)) #b00101)) ; $56\ship_x[4:0]
(define-fun |ship#8| ((state |ship_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b10 #b01)) ; $19\ship_x[4:0] [1:0]
(define-fun |ship#9| ((state |ship_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b00 (|ship#8| state))) ; $18\ship_x[4:0] [1:0]
(define-fun |ship#10| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b100 (|ship#9| state)) #b00101)) ; $53\ship_x[4:0]
(define-fun |ship#11| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b01111 (concat #b1000 (|ship#5| state)))) ; $51\ship_x[4:0]
(define-fun |ship#12| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#11| state) #b00101)) ; $50\ship_x[4:0]
(define-fun |ship#13| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b10000 #b01111)) ; $49\ship_x[4:0]
(define-fun |ship#14| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b01110 (|ship#13| state))) ; $48\ship_x[4:0]
(define-fun |ship#15| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#14| state) #b00101)) ; $47\ship_x[4:0]
(define-fun |ship#16| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b11 (|ship#6| state)) #b0101)) ; $44\ship_x[4:0] [3:0]
(define-fun |ship#17| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b11 (|ship#9| state)) #b0101)) ; $41\ship_x[4:0] [3:0]
(define-fun |ship#18| ((state |ship_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b011 (concat #b10 (|ship#5| state)))) ; $15\ship_x[4:0] [2:0]
(define-fun |ship#19| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b1 (|ship#18| state)) #b0101)) ; $38\ship_x[4:0] [3:0]
(define-fun |ship#20| ((state |ship_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b100 #b011)) ; $13\ship_x[4:0]
(define-fun |ship#21| ((state |ship_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b010 (|ship#20| state))) ; $12\ship_x[4:0] [2:0]
(define-fun |ship#22| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b1 (|ship#21| state)) #b0101)) ; $35\ship_x[4:0] [3:0]
(define-fun |ship#23| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b10 (|ship#6| state)) #b0101)) ; $32\ship_x[4:0] [3:0]
(define-fun |ship#24| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b10 (|ship#9| state)) #b0101)) ; $29\ship_x[4:0] [3:0]
(define-fun |ship#25| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b0111 (concat #b100 (|ship#5| state)))) ; $27\ship_x[4:0] [3:0]
(define-fun |ship#26| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#25| state) #b0101)) ; $26\ship_x[4:0] [3:0]
(define-fun |ship#27| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b1000 #b0111)) ; $25\ship_x[4:0] [3:0]
(define-fun |ship#28| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b0110 (|ship#27| state))) ; $24\ship_x[4:0] [3:0]
(define-fun |ship#29| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#28| state) #b0101)) ; $23\ship_x[4:0] [3:0]
(define-fun |ship#30| ((state |ship_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b0 (|ship#5| state))) ; $21\ship_x[4:0] [0]
(define-fun |ship#31| ((state |ship_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b1 (|ship#30| state)) #b01)) ; $20\ship_x[4:0] [1:0]
(define-fun |ship#32| ((state |ship_s|)) (_ BitVec 2) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#9| state) #b01)) ; $17\ship_x[4:0] [1:0]
(define-fun |ship#33| ((state |ship_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#18| state) #b101)) ; $14\ship_x[4:0]
(define-fun |ship#34| ((state |ship_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#21| state) #b101)) ; $11\ship_x[4:0]
(define-fun |ship#35| ((state |ship_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b0 (|ship#6| state)) #b101)) ; $8\ship_x[4:0] [2:0]
(define-fun |ship#36| ((state |ship_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b0 (|ship#9| state)) #b101)) ; $5\ship_x[4:0]
(define-fun |ship#37| ((state |ship_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (concat #b00 (|ship#5| state)) #b101)) ; $3\ship_x[4:0]
(declare-fun |ship#38| (|ship_s|) (_ BitVec 21)) ; \current_state
(define-fun |ship#39| ((state |ship_s|)) Bool (= (|ship#38| state) #b100000000000000000000)) ; $procmux$101_CMP
(define-fun |ship#40| ((state |ship_s|)) Bool (= (|ship#38| state) #b010000000000000000000)) ; $procmux$120_CMP
(define-fun |ship#41| ((state |ship_s|)) Bool (= (|ship#38| state) #b001000000000000000000)) ; $procmux$181_CMP
(define-fun |ship#42| ((state |ship_s|)) Bool (= (|ship#38| state) #b000100000000000000000)) ; $procmux$2268_CMP
(define-fun |ship#43| ((state |ship_s|)) Bool (= (|ship#38| state) #b000010000000000000000)) ; $procmux$2269_CMP
(define-fun |ship#44| ((state |ship_s|)) Bool (= (|ship#38| state) #b000001000000000000000)) ; $procmux$2270_CMP
(define-fun |ship#45| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000100000000000000)) ; $procmux$2271_CMP
(define-fun |ship#46| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000010000000000000)) ; $procmux$2272_CMP
(define-fun |ship#47| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000001000000000000)) ; $procmux$2273_CMP
(define-fun |ship#48| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000100000000000)) ; $procmux$2274_CMP
(define-fun |ship#49| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000010000000000)) ; $procmux$2275_CMP
(define-fun |ship#50| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000001000000000)) ; $procmux$1000_CMP
(define-fun |ship#51| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000000100000000)) ; $procmux$1121_CMP
(define-fun |ship#52| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000000010000000)) ; $procmux$1248_CMP
(define-fun |ship#53| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000000001000000)) ; $procmux$1381_CMP
(define-fun |ship#54| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000000000100000)) ; $procmux$1520_CMP
(define-fun |ship#55| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000000000010000)) ; $procmux$1665_CMP
(define-fun |ship#56| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000000000001000)) ; $procmux$1816_CMP
(define-fun |ship#57| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000000000000100)) ; $procmux$1973_CMP
(define-fun |ship#58| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000000000000010)) ; $procmux$2133_CMP
(define-fun |ship#59| ((state |ship_s|)) (_ BitVec 5) (ite (|ship#58| state) (concat #b00 (|ship#37| state)) (ite (|ship#57| state) (concat #b00 (|ship#36| state)) (ite (|ship#56| state) (concat #b00 (|ship#35| state)) (ite (|ship#55| state) (concat #b00 (|ship#34| state)) (ite (|ship#54| state) (concat #b00 (|ship#33| state)) (ite (|ship#53| state) (concat #b001 (|ship#32| state)) (ite (|ship#52| state) (concat #b001 (|ship#31| state)) (ite (|ship#51| state) (concat #b0 (|ship#29| state)) (ite (|ship#50| state) (concat #b0 (|ship#26| state)) (ite (|ship#49| state) (concat #b0 (|ship#24| state)) (ite (|ship#48| state) (concat #b0 (|ship#23| state)) (ite (|ship#47| state) (concat #b0 (|ship#22| state)) (ite (|ship#46| state) (concat #b0 (|ship#19| state)) (ite (|ship#45| state) (concat #b0 (|ship#17| state)) (ite (|ship#44| state) (concat #b0 (|ship#16| state)) (ite (|ship#43| state) (|ship#15| state) (ite (|ship#42| state) (|ship#12| state) (ite (|ship#41| state) (|ship#10| state) (ite (|ship#40| state) (|ship#7| state) (ite (|ship#39| state) (|ship#3| state) #b00101))))))))))))))))))))) ; \ship_x
(define-fun |ship_n ship_x| ((state |ship_s|)) (_ BitVec 5) (|ship#59| state))
; yosys-smt2-input right_debounced 1
; yosys-smt2-wire right_debounced 1
(define-fun |ship_n right_debounced| ((state |ship_s|)) Bool (= ((_ extract 0 0) (|ship#4| state)) #b1))
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
(define-fun |ship_n reset| ((state |ship_s|)) Bool (= ((_ extract 0 0) (|ship#2| state)) #b1))
; yosys-smt2-wire next_state 21
(define-fun |ship#60| ((state |ship_s|)) (_ BitVec 21) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b010000000000000000000 #b100000000000000000000)) ; $60\next_state[20:0]
(define-fun |ship#61| ((state |ship_s|)) (_ BitVec 21) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#60| state) #b000000000000000000001)) ; $59\next_state[20:0]
(define-fun |ship#62| ((state |ship_s|)) (_ BitVec 21) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b100000000000000000000 #b010000000000000000000)) ; $58\next_state[20:0]
(define-fun |ship#63| ((state |ship_s|)) (_ BitVec 21) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b001000000000000000000 (|ship#62| state))) ; $57\next_state[20:0]
(define-fun |ship#64| ((state |ship_s|)) (_ BitVec 21) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#63| state) #b000000000000000000001)) ; $56\next_state[20:0]
(define-fun |ship#65| ((state |ship_s|)) (_ BitVec 20) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b10000000000000000000 #b01000000000000000000)) ; $55\next_state[20:0] [19:0]
(define-fun |ship#66| ((state |ship_s|)) (_ BitVec 20) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b00100000000000000000 (|ship#65| state))) ; $54\next_state[20:0] [19:0]
(define-fun |ship#67| ((state |ship_s|)) (_ BitVec 20) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#66| state) #b00000000000000000001)) ; $53\next_state[20:0] [19:0]
(define-fun |ship#68| ((state |ship_s|)) (_ BitVec 19) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b1000000000000000000 #b0100000000000000000)) ; $52\next_state[20:0] [18:0]
(define-fun |ship#69| ((state |ship_s|)) (_ BitVec 19) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b0010000000000000000 (|ship#68| state))) ; $51\next_state[20:0] [18:0]
(define-fun |ship#70| ((state |ship_s|)) (_ BitVec 19) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#69| state) #b0000000000000000001)) ; $50\next_state[20:0] [18:0]
(define-fun |ship#71| ((state |ship_s|)) (_ BitVec 18) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b100000000000000000 #b010000000000000000)) ; $49\next_state[20:0] [17:0]
(define-fun |ship#72| ((state |ship_s|)) (_ BitVec 18) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b001000000000000000 (|ship#71| state))) ; $48\next_state[20:0] [17:0]
(define-fun |ship#73| ((state |ship_s|)) (_ BitVec 18) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#72| state) #b000000000000000001)) ; $47\next_state[20:0] [17:0]
(define-fun |ship#74| ((state |ship_s|)) (_ BitVec 17) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b10000000000000000 #b01000000000000000)) ; $46\next_state[20:0] [16:0]
(define-fun |ship#75| ((state |ship_s|)) (_ BitVec 17) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b00100000000000000 (|ship#74| state))) ; $45\next_state[20:0] [16:0]
(define-fun |ship#76| ((state |ship_s|)) (_ BitVec 17) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#75| state) #b00000000000000001)) ; $44\next_state[20:0] [16:0]
(define-fun |ship#77| ((state |ship_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b1000000000000000 #b0100000000000000)) ; $43\next_state[20:0] [15:0]
(define-fun |ship#78| ((state |ship_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b0010000000000000 (|ship#77| state))) ; $42\next_state[20:0] [15:0]
(define-fun |ship#79| ((state |ship_s|)) (_ BitVec 16) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#78| state) #b0000000000000001)) ; $41\next_state[20:0] [15:0]
(define-fun |ship#80| ((state |ship_s|)) (_ BitVec 15) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b100000000000000 #b010000000000000)) ; $40\next_state[20:0] [14:0]
(define-fun |ship#81| ((state |ship_s|)) (_ BitVec 15) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b001000000000000 (|ship#80| state))) ; $39\next_state[20:0] [14:0]
(define-fun |ship#82| ((state |ship_s|)) (_ BitVec 15) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#81| state) #b000000000000001)) ; $38\next_state[20:0] [14:0]
(define-fun |ship#83| ((state |ship_s|)) (_ BitVec 14) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b10000000000000 #b01000000000000)) ; $37\next_state[20:0] [13:0]
(define-fun |ship#84| ((state |ship_s|)) (_ BitVec 14) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b00100000000000 (|ship#83| state))) ; $36\next_state[20:0] [13:0]
(define-fun |ship#85| ((state |ship_s|)) (_ BitVec 14) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#84| state) #b00000000000001)) ; $35\next_state[20:0] [13:0]
(define-fun |ship#86| ((state |ship_s|)) (_ BitVec 13) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b1000000000000 #b0100000000000)) ; $34\next_state[20:0] [12:0]
(define-fun |ship#87| ((state |ship_s|)) (_ BitVec 13) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b0010000000000 (|ship#86| state))) ; $33\next_state[20:0] [12:0]
(define-fun |ship#88| ((state |ship_s|)) (_ BitVec 13) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#87| state) #b0000000000001)) ; $32\next_state[20:0] [12:0]
(define-fun |ship#89| ((state |ship_s|)) (_ BitVec 12) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b100000000000 #b010000000000)) ; $31\next_state[20:0] [11:0]
(define-fun |ship#90| ((state |ship_s|)) (_ BitVec 12) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b001000000000 (|ship#89| state))) ; $30\next_state[20:0] [11:0]
(define-fun |ship#91| ((state |ship_s|)) (_ BitVec 12) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#90| state) #b000000000001)) ; $29\next_state[20:0] [11:0]
(define-fun |ship#92| ((state |ship_s|)) (_ BitVec 11) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b10000000000 #b01000000000)) ; $28\next_state[20:0] [10:0]
(define-fun |ship#93| ((state |ship_s|)) (_ BitVec 11) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b00100000000 (|ship#92| state))) ; $27\next_state[20:0] [10:0]
(define-fun |ship#94| ((state |ship_s|)) (_ BitVec 11) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#93| state) #b00000000001)) ; $26\next_state[20:0] [10:0]
(define-fun |ship#95| ((state |ship_s|)) (_ BitVec 10) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b1000000000 #b0100000000)) ; $25\next_state[20:0] [9:0]
(define-fun |ship#96| ((state |ship_s|)) (_ BitVec 10) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b0010000000 (|ship#95| state))) ; $24\next_state[20:0] [9:0]
(define-fun |ship#97| ((state |ship_s|)) (_ BitVec 10) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#96| state) #b0000000001)) ; $23\next_state[20:0] [9:0]
(define-fun |ship#98| ((state |ship_s|)) (_ BitVec 9) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b100000000 #b010000000)) ; $22\next_state[20:0] [8:0]
(define-fun |ship#99| ((state |ship_s|)) (_ BitVec 9) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b001000000 (|ship#98| state))) ; $21\next_state[20:0]
(define-fun |ship#100| ((state |ship_s|)) (_ BitVec 9) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#99| state) #b000000001)) ; $20\next_state[20:0] [8:0]
(define-fun |ship#101| ((state |ship_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b10000000 #b01000000)) ; $19\next_state[20:0] [7:0]
(define-fun |ship#102| ((state |ship_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b00100000 (|ship#101| state))) ; $18\next_state[20:0] [7:0]
(define-fun |ship#103| ((state |ship_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#102| state) #b00000001)) ; $17\next_state[20:0]
(define-fun |ship#104| ((state |ship_s|)) (_ BitVec 7) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b1000000 #b0100000)) ; $16\next_state[20:0] [6:0]
(define-fun |ship#105| ((state |ship_s|)) (_ BitVec 7) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b0010000 (|ship#104| state))) ; $15\next_state[20:0]
(define-fun |ship#106| ((state |ship_s|)) (_ BitVec 7) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#105| state) #b0000001)) ; $14\next_state[20:0]
(define-fun |ship#107| ((state |ship_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b100000 #b010000)) ; $13\next_state[20:0] [5:0]
(define-fun |ship#108| ((state |ship_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b001000 (|ship#107| state))) ; $12\next_state[20:0] [5:0]
(define-fun |ship#109| ((state |ship_s|)) (_ BitVec 6) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#108| state) #b000001)) ; $11\next_state[20:0]
(define-fun |ship#110| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b10000 #b01000)) ; $10\next_state[20:0]
(define-fun |ship#111| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b00100 (|ship#110| state))) ; $9\next_state[20:0] [4:0]
(define-fun |ship#112| ((state |ship_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#111| state) #b00001)) ; $8\next_state[20:0] [4:0]
(define-fun |ship#113| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b1000 #b0100)) ; $7\next_state[20:0] [3:0]
(define-fun |ship#114| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#0| state)) #b1) #b0010 (|ship#113| state))) ; $6\next_state[20:0] [3:0]
(define-fun |ship#115| ((state |ship_s|)) (_ BitVec 4) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#114| state) #b0001)) ; $5\next_state[20:0] [3:0]
(define-fun |ship#116| ((state |ship_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|ship#4| state)) #b1) #b100 #b010)) ; $4\next_state[20:0] [2:0]
(define-fun |ship#117| ((state |ship_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) (|ship#116| state) #b001)) ; $3\next_state[20:0] [2:0]
(define-fun |ship#118| ((state |ship_s|)) (_ BitVec 7) (ite (= ((_ extract 0 0) (|ship#2| state)) #b1) #b1000000 #b0000001)) ; $2\next_state[20:0]
(define-fun |ship#119| ((state |ship_s|)) Bool (= (|ship#38| state) #b000000000000000000001)) ; $procmux$2237_CMP
(define-fun |ship#120| ((state |ship_s|)) (_ BitVec 21) (ite (|ship#119| state) (concat #b00000000000000 (|ship#118| state)) (ite (|ship#58| state) (concat #b000000000000000000 (|ship#117| state)) (ite (|ship#57| state) (concat #b00000000000000000 (|ship#115| state)) (ite (|ship#56| state) (concat #b0000000000000000 (|ship#112| state)) (ite (|ship#55| state) (concat #b000000000000000 (|ship#109| state)) (ite (|ship#54| state) (concat #b00000000000000 (|ship#106| state)) (ite (|ship#53| state) (concat #b0000000000000 (|ship#103| state)) (ite (|ship#52| state) (concat #b000000000000 (|ship#100| state)) (ite (|ship#51| state) (concat #b00000000000 (|ship#97| state)) (ite (|ship#50| state) (concat #b0000000000 (|ship#94| state)) (ite (|ship#49| state) (concat #b000000000 (|ship#91| state)) (ite (|ship#48| state) (concat #b00000000 (|ship#88| state)) (ite (|ship#47| state) (concat #b0000000 (|ship#85| state)) (ite (|ship#46| state) (concat #b000000 (|ship#82| state)) (ite (|ship#45| state) (concat #b00000 (|ship#79| state)) (ite (|ship#44| state) (concat #b0000 (|ship#76| state)) (ite (|ship#43| state) (concat #b000 (|ship#73| state)) (ite (|ship#42| state) (concat #b00 (|ship#70| state)) (ite (|ship#41| state) (concat #b0 (|ship#67| state)) (ite (|ship#40| state) (|ship#64| state) (ite (|ship#39| state) (|ship#61| state) #b000000000000000000001)))))))))))))))))))))) ; \next_state
(define-fun |ship_n next_state| ((state |ship_s|)) (_ BitVec 21) (|ship#120| state))
; yosys-smt2-input left_debounced 1
; yosys-smt2-wire left_debounced 1
(define-fun |ship_n left_debounced| ((state |ship_s|)) Bool (= ((_ extract 0 0) (|ship#0| state)) #b1))
; yosys-smt2-input enable 1
; yosys-smt2-wire enable 1
(declare-fun |ship#121| (|ship_s|) Bool) ; \enable
(define-fun |ship_n enable| ((state |ship_s|)) Bool (|ship#121| state))
; yosys-smt2-register current_state 21
; yosys-smt2-wire current_state 21
(define-fun |ship_n current_state| ((state |ship_s|)) (_ BitVec 21) (|ship#38| state))
; yosys-smt2-input clk_36MHz 1
; yosys-smt2-wire clk_36MHz 1
; yosys-smt2-clock clk_36MHz posedge
(declare-fun |ship#122| (|ship_s|) Bool) ; \clk_36MHz
(define-fun |ship_n clk_36MHz| ((state |ship_s|)) Bool (|ship#122| state))
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
(declare-fun |ship#123| (|ship_s|) Bool) ; \clk
(define-fun |ship_n clk| ((state |ship_s|)) Bool (|ship#123| state))
; yosys-smt2-register $formal$ship.v:419$2_CHECK 1
(declare-fun |ship#124| (|ship_s|) (_ BitVec 1)) ; $formal$ship.v:419$2_CHECK
(define-fun |ship_n $formal$ship.v:419$2_CHECK| ((state |ship_s|)) Bool (= ((_ extract 0 0) (|ship#124| state)) #b1))
; yosys-smt2-register $formal$ship.v:418$1_EN 1
(declare-fun |ship#125| (|ship_s|) (_ BitVec 1)) ; $formal$ship.v:418$1_EN
(define-fun |ship_n $formal$ship.v:418$1_EN| ((state |ship_s|)) Bool (= ((_ extract 0 0) (|ship#125| state)) #b1))
; yosys-smt2-register $formal$ship.v:418$1_CHECK 1
(declare-fun |ship#126| (|ship_s|) (_ BitVec 1)) ; $formal$ship.v:418$1_CHECK
(define-fun |ship_n $formal$ship.v:418$1_CHECK| ((state |ship_s|)) Bool (= ((_ extract 0 0) (|ship#126| state)) #b1))
; yosys-smt2-assert 0 ship.v:419
(define-fun |ship_a 0| ((state |ship_s|)) Bool (or (= ((_ extract 0 0) (|ship#124| state)) #b1) (not (= ((_ extract 0 0) (|ship#125| state)) #b1)))) ; $assert$ship.v:419$72
; yosys-smt2-assert 1 ship.v:418
(define-fun |ship_a 1| ((state |ship_s|)) Bool (or (= ((_ extract 0 0) (|ship#126| state)) #b1) (not (= ((_ extract 0 0) (|ship#125| state)) #b1)))) ; $assert$ship.v:418$71
(define-fun |ship#127| ((state |ship_s|)) Bool (bvult (|ship#59| state) #b10100)) ; $0$formal$ship.v:418$1_CHECK[0:0]$65
(define-fun |ship#128| ((state |ship_s|)) Bool (bvuge (|ship#59| state) #b00000)) ; $0$formal$ship.v:419$2_CHECK[0:0]$67
(define-fun |ship_a| ((state |ship_s|)) Bool (and
  (|ship_a 0| state)
  (|ship_a 1| state)
))
(define-fun |ship_u| ((state |ship_s|)) Bool true)
(define-fun |ship_i| ((state |ship_s|)) Bool (and
  (= (|ship#38| state) #b000000000000000000001) ; current_state
  (= (= ((_ extract 0 0) (|ship#125| state)) #b1) false) ; $formal$ship.v:418$1_EN
))
(define-fun |ship_h| ((state |ship_s|)) Bool true)
(define-fun |ship_t| ((state |ship_s|) (next_state |ship_s|)) Bool (and
  (= (ite (|ship#127| state) #b1 #b0) (|ship#126| next_state)) ; $procdff$2309 $formal$ship.v:418$1_CHECK
  (= #b1 (|ship#125| next_state)) ; $procdff$2310 $formal$ship.v:418$1_EN
  (= (ite (|ship#128| state) #b1 #b0) (|ship#124| next_state)) ; $procdff$2311 $formal$ship.v:419$2_CHECK
  (= (|ship#120| state) (|ship#38| next_state)) ; $procdff$2313 \current_state
)) ; end of module ship
; yosys-smt2-topmod ship
; end of yosys output
